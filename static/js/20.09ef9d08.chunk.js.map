{"version":3,"sources":["views/pages/authentication/login/FirebaseLogin.js","assets/images/1_small.png","assets/images/auth/auth-pattern.svg","assets/images/auth/auth-blue.svg","assets/images/auth/auth-purple.svg","assets/images/auth/logo_arab.png","assets/images/auth/SM.png","views/pages/authentication/login/index.js","hooks/useScriptRef.js"],"names":["useStyles","makeStyles","theme","root","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","purple","main","loginIcon","marginRight","title","login","dark","loginput","top","left","display","startAdornment","width","errorMessage","alignItems","FirebaseLogin","props","className","rest","classes","scriptedRef","useScriptRef","useState","showPassword","setShowPassword","steErrorMessage","history","useHistory","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","Grid","container","direction","justifyContent","item","xs","Box","mb","Typography","variant","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","fetchLoginGetData","payload","strEmail","strPassword","api","post","response","data","strAccessToken","strRefreshToken","intUserId","strUserName","Cookies","set","push","error","console","log","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","mt","Button","disableElevation","disabled","size","height","minHeight","card","maxWidth","overflow","flexBasis","content","icon","indicator","activeIndicator","authBlue","backgroundImage","AuthBlue","backgroundRepeat","backgroundPosition","animation","AuthPurple","animationDelay","authPurpleCard","backgroundSize","AuthPurpleCard","AuthBlueCard","Item","textAlign","md","description","Login","useTheme","matchDownSM","useMediaQuery","Card","CardContent","gutterBottom","to","alt","src","logo","Divider","Hidden","mdDown","sx","alignSelf","component","bgcolor","AuthPattern","p","navButtonsAlwaysInvisible","autoPlay","indicatorIconButtonProps","activeIndicatorIconButtonProps","indicatorContainerProps","style","map","i","scripted","useRef","useEffect"],"mappings":"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","file":"static/js/20.09ef9d08.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport Cookies from 'js-cookie';\n// import {useSelector} from 'react-redux';\nimport {\n    Box,\n    Button,\n    // Checkbox,\n    // Divider,\n    FormControl,\n    // FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\n// import {Link} from 'react-router-dom';\nimport api from '../../../../utils/axios';\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n// import Google from './../../../../assets/images/icons/social-google.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    },\n    errorMessage: {\n        color: 'red',\n        fontSize: '1rem',\n        alignItems: 'center'\n    }\n}));\n\nconst FirebaseLogin = (props, {className, ...rest}) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = useState(false);\n    const [errorMessage, steErrorMessage] = useState('');\n    // const googleHandler = async () => {};\n    const history = useHistory();\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/* <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid> */}\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={errorMessage ? classes.errorMessage : classes.title}>\n                            {errorMessage ? errorMessage : 'Sign in with Email address'}\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                        async function fetchLoginGetData() {\n                            try {\n                                let payload = {\n                                    strEmail: values.email,\n                                    strPassword: values.password\n                                };\n                                const response = await api.post('auth/login', payload);\n                                const {strAccessToken, strRefreshToken, intUserId, strUserName} = response.data;\n                                Cookies.set('strAccessToken', strAccessToken);\n                                Cookies.set('strRefreshToken', strRefreshToken);\n                                Cookies.set('intUserId', intUserId);\n                                Cookies.set('strUserName', strUserName);\n                                let path = `/dashboard`;\n                                history.push(path);\n                                return response.data;\n                            } catch (error) {\n                                if (error.error === 'USER_NOT_REGISTERED') steErrorMessage('User not registered !');\n                                if (error.error === 'INCORRECT_PASSWORD_OR_USERNAME') steErrorMessage('Incorrect Password or Email !');\n                                console.log('error :>> ', error);\n                            }\n                        }\n                        fetchLoginGetData();\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        {/* <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"subtitle1\">Forgot Password?</Typography>\n                            </Grid>\n                        </Grid> */}\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n","export default __webpack_public_path__ + \"static/media/1_small.11ed527a.png\";","export default __webpack_public_path__ + \"static/media/auth-pattern.df3f321b.svg\";","export default __webpack_public_path__ + \"static/media/auth-blue.de806050.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple.15fc76c7.svg\";","export default __webpack_public_path__ + \"static/media/logo_arab.d75ad107.png\";","export default __webpack_public_path__ + \"static/media/SM.65993b4a.png\";","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Box, Card, CardContent, Divider, Grid, Hidden, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport Carousel from 'react-material-ui-carousel';\n\n//import JWTLogin from './JWTLogin';\n//import Auth0Login from './Auth0Login';\nimport FirebaseLogin from './FirebaseLogin';\n\nimport logo from './../../../../assets/images/1_small.png';\nimport AuthPattern from './../../../../assets/images/auth/auth-pattern.svg';\nimport AuthBlue from './../../../../assets/images/auth/auth-blue.svg';\nimport AuthPurple from './../../../../assets/images/auth/auth-purple.svg';\nimport AuthBlueCard from './../../../../assets/images/auth/logo_arab.png';\nimport AuthPurpleCard from './../../../../assets/images/auth/SM.png';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%'\n    },\n    card: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    icon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '24px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    },\n    login: {\n        fontWeight: 500,\n        color: theme.palette.purple.main,\n        borderColor: theme.palette.purple.light,\n        '&:hover': {\n            borderColor: theme.palette.primary.light,\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    indicator: {\n        color: theme.palette.purple.light,\n        '&:hover': {\n            color: theme.palette.purple.main\n        }\n    },\n    activeIndicator: {\n        color: theme.palette.purple.main\n    },\n    authBlue: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            left: '435px',\n            top: '529px',\n            backgroundImage: `url(${AuthBlue})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            [theme.breakpoints.down('lg')]: {\n                top: '465px',\n                left: '325px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            top: '76px',\n            left: '103px',\n            backgroundImage: `url(${AuthPurple})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            animationDelay: '1s',\n            [theme.breakpoints.down('lg')]: {\n                top: '140px',\n                left: '-10px'\n            }\n        }\n    },\n    authPurpleCard: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '32%',\n            left: '30%',\n            width: '400px',\n            backgroundSize: '380px',\n            height: '280px',\n            backgroundImage: `url(${AuthPurpleCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '15%',\n            left: '35%',\n            width: '400px',\n            height: '210px',\n            backgroundSize: '380px',\n            backgroundImage: `url(${AuthBlueCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite',\n            animationDelay: '1s'\n        }\n    }\n}));\n\nconst Item = (props) => {\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3} textAlign=\"center\">\n            <Grid item md={4} width={350}>\n                <Typography variant=\"h1\">{props.item.title}</Typography>\n            </Grid>\n            <Grid item md={2} width={200}>\n                <Typography variant=\"subtitle2\">{props.item.description}</Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst Login = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const items = [\n        {\n            title: 'souqmuscat.com',\n            description: 'The best e-commerce site in Oman'\n        },\n        {\n            title: 'سوقمسقط.كوم',\n            description: 'أفضل موقع للتجارة الإلكترونية في عمان'\n        }\n        // {\n        //     title: 'Components Based Design System',\n        //     description: 'Powerfull and easy to use multipurpose theme'\n        // }\n    ];\n\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" className={classes.root}>\n            <Grid item container justifyContent=\"center\" md={7}>\n                <Card className={classes.card}>\n                    <CardContent className={classes.content}>\n                        <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                            <Grid item xs={12}>\n                                <Grid\n                                    container\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\n                                    alignItems={matchDownSM && 'center'}\n                                    justifyContent={matchDownSM ? 'center' : 'space-between'}\n                                >\n                                    <Grid item>\n                                        <Grid container direction=\"column\" spacing={1}>\n                                            <Grid item container direction=\"column\" alignItems={matchDownSM && 'center'}>\n                                                <Grid item>\n                                                    <Typography\n                                                        color={theme.palette.purple.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <Typography color=\"textPrimary\" gutterBottom variant={matchDownSM ? 'h4' : 'h3'}>\n                                                        Login in to your account\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            {/* <Grid item>\n                                                <Typography variant=\"caption\">\n                                                    Enter your credentials to continue.\n                                                </Typography>\n                                            </Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item className={classes.icon}>\n                                        <RouterLink to=\"#\">\n                                            <img alt=\"Auth method\" src={logo} width=\"150\" />\n                                        </RouterLink>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                {/* <JWTLogin /> */}\n                                {/* <Auth0Login /> */}\n                                <FirebaseLogin />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs={12}>\n                                    {/* <Typography\n                                        component={RouterLink}\n                                        to=\"/pages/register/register3\"\n                                        variant=\"subtitle1\"\n                                        className={classes.title}\n                                    >\n                                        Don't have an account?\n                                    </Typography> */}\n                                    {/* <Box mt={1} width='100%'>\n                                    <Button\n                                        disableElevation\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        className={classes.login}\n                                    >\n                                        Sign up now\n                                    </Button>\n                                </Box> */}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Hidden mdDown>\n                <Grid item md={5} sx={{alignSelf: 'stretch'}}>\n                    <Box\n                        component=\"span\"\n                        sx={{\n                            display: 'flex',\n                            maxWidth: 770,\n                            minHeight: '100%',\n                            height: '100vh',\n                            bgcolor: '#fff',\n                            backgroundImage: `url(${AuthPattern})`,\n                            position: 'relative',\n                            backgroundPosition: '0 0',\n                            overflow: 'hidden',\n                            margin: '0 0 0 auto'\n                        }}\n                    >\n                        <Grid item container direction=\"column\" justifyContent=\"flex-end\">\n                            <Grid item>\n                                <span className={classes.authBlue}></span>\n                                <span className={classes.authPurpleCard}></span>\n                            </Grid>\n                            <Grid item>\n                                <Box p={10}>\n                                    <Carousel\n                                        animation=\"slide\"\n                                        navButtonsAlwaysInvisible\n                                        autoPlay={false}\n                                        indicatorIconButtonProps={{\n                                            className: classes.indicator\n                                        }}\n                                        activeIndicatorIconButtonProps={{\n                                            className: classes.activeIndicator\n                                        }}\n                                        indicatorContainerProps={{\n                                            style: {\n                                                marginTop: '32px'\n                                            }\n                                        }}\n                                    >\n                                        {items.map((item, i) => (\n                                            <Item key={i} item={item} />\n                                        ))}\n                                    </Carousel>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n};\n\nexport default Login;\n","import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n"],"sourceRoot":""}